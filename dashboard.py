# -*- coding: utf-8 -*-
"""dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZLii78BaYWmL0cAdhPHRnn9ICxcdQps3
"""

# Import necessary libraries
!pip install streamlit
import streamlit as st
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
category_customer = pd.read_csv(z.open('data/category_customer_count.csv'))
grouped_data = pd.read_csv(z.open('data/grouped_data.csv'))
# Set the style for seaborn
sns.set(style="whitegrid")

# Function to plot cities with the lowest sales
def plot_lowest_sales_cities(sorted_data):
    plt.figure(figsize=(10, 6))
    sns.barplot(x='total_orders', y='geolocation_city', data=sorted_data, palette='Blues_d')
    plt.xlabel('Total Orders')
    plt.ylabel('Geolocation City')
    plt.title('Cities with the Lowest Total Orders')
    st.pyplot(plt)

# Function to plot product categories with the lowest buyers
def plot_lowest_buyer_categories(category_customer_count):
    plt.figure(figsize=(10, 6))
    sns.barplot(x='customer_id', y='product_category_name_english', data=category_customer_count.head(10), palette='coolwarm')
    plt.title('10 Product Categories with the Lowest Number of Buyers')
    plt.xlabel('Number of Buyers')
    plt.ylabel('Product Category')
    st.pyplot(plt)

# Main dashboard
def main():
    st.title('Sales Dashboard')

    # Section for Cities with Lowest Sales
    st.header('Cities with the Lowest Total Orders')

    # Mock data (replace with your actual data)
    data = {
        'geolocation_city': ['sao paulo', 'agua nova', 'jos√© da penha', 'rio de janeiro', 'rio de janeiro'],
        'total_orders': [1, 1, 1, 136, 136]
    }
    sorted_data = pd.DataFrame(data)

    plot_lowest_sales_cities(sorted_data)

    # Section for Product Categories with Lowest Buyers
    st.header('10 Product Categories with the Lowest Number of Buyers')

    # Mock data (replace with your actual data)
    category_data = {
        'product_category_name_english': ['category1', 'category2', 'category3', 'category4', 'category5'],
        'customer_id': [10, 20, 15, 5, 25]
    }
    category_customer_count = pd.DataFrame(category_data)

    plot_lowest_buyer_categories(category_customer_count)

if __name__ == "__main__":
    main()

